#include <SoftwareSerial.h> //시리얼 통신 라이브러리 호출
 
int blueTx=2;   //Tx (보내는핀 설정)
int blueRx=3;   //Rx (받는핀 설정)
SoftwareSerial mySerial(blueTx, blueRx);  //시리얼 통신을 위한 객체선언
String string=""; //받는 문자열
 

#include "LedControl.h" 
LedControl lc=LedControl(12,11,10,4); 

void setup() {
  // put your setup code here, to run once:
    for(int i=0; i<4; i++){              // 도트 매트릭스 0~3번
    lc.shutdown(i,false);           // 디스플레이 초기화
    lc.setIntensity(i,1);             // 도트 매트릭스 밝기 (매트릭스 번호, 밝기) 1~15
    lc.clearDisplay(i);              // led 를 전체 꺼주는 함수
  }
  
  Serial.begin(9600);
    mySerial.begin(9600); //블루투스 시리얼 개방
}

void clean(){                       // 전체led를 꺼주는 함수
  for(int i = 0; i < 4; i++)
    lc.clearDisplay(i);// clear screen
}

int a =0;
void loop() {

   while(mySerial.available())  //mySerial에 전송된 값이 있으면
  {
    char myChar = (char)mySerial.read();  //mySerial int 값을 char 형식으로 변환
    string+=myChar;   //수신되는 문자를 string에 모두 붙임 (1바이트씩 전송되는 것을 연결)
    delay(5);           //수신 문자열 끊김 방지
  }
  if(!string.equals(""))  //string 값이 있다면
  {
    Serial.println("input value: "+string); //시리얼모니터에 string값 출력
    
  // put your main code here, to run repeatedly:

    int pattern = 3;
    int row, col, i;

    if(string.charAt(0)=='0'){
      clean() ;}
//String string ="a 01 13 14 56 43";
//String string = Serial.readString();
//  if(Serial.available()){
    if(string.charAt(0)=='1'){
      int lengtha = string.length();
    int xa[lengtha];
    int ya[lengtha];
      char xaya[lengtha-2];
      
      for(int i=0; i<int(lengtha/3); i++){
    xa[i] = string.substring(3*i+2, 3*i+3).toInt();
    ya[i] = string.substring(3*i+3, 3*i+4).toInt();
      lc.setLed(0, xa[i], ya[i], true); 
      delay(500);
//            else                           // 위 배열에서 0일때 해당되는 위치 불빛 꺼주기
//              lc.setLed(i, col, row, false); 
        
      }
//          for (row = 0; row < 8; row++) {    // row 출력
//         for (col=0; col < 8; col++){     // col 출력
//            if (patterns[i][7 - col][7 - row] == 1)      
//// 위의 배열에서 1일때 해당되는 위치 불빛 켜주기
//              lc.setLed(i, col, row, true); 
//            else                           // 위 배열에서 0일때 해당되는 위치 불빛 꺼주기
//              lc.setLed(i, col, row, false); 
//         }
//      }
  }

//      }
      else if(string.charAt(0)=='2'){
        int lengthb = string.length();
        int xb[lengthb];
        int yb[lengthb];
        char xbyb[lengthb-2];
      
      for(int i=0; i<int(lengthb/3); i++){
    xb[i] = string.substring(3*i+2, 3*i+3).toInt();
    yb[i] = string.substring(3*i+3, 3*i+4).toInt();
    lc.setLed(1, xb[i], yb[i], true); 
      delay(500);
  }
      }
       else if(string.charAt(0)=='3'){
        int lengthc = string.length();
        int xc[lengthc];
        int yc[lengthc];
        char xcyc[lengthc-2];
      
      for(int i=0; i<int(lengthc/3); i++){
    xc[i] = string.substring(3*i+2, 3*i+3).toInt();
    yc[i] = string.substring(3*i+3, 3*i+4).toInt();
    lc.setLed(2, xc[i], yc[i], true); 
      delay(500);

  }
      }
    /*
//    char textnum = string.charAt(0);
    int lengtha = string.length();
    int xa[lengtha];
    int ya[lengtha];
      char xaya[lengtha-2];
      
//    x[0] = string.charAt[3];
//    Serial.println(atoi(x[0]));
//String sCommand = "100140255";
//char cTempData[4];
//string.substring(2, 17).toCharArray(xy, 15);
  for(int i=0; i<int(lengtha/3); i++){
    xa[i] = string.substring(3*i+2, 3*i+3).toInt();
    ya[i] = string.substring(3*i+3, 3*i+4).toInt();
  }
//x[0] = string.substring(2, 3).toInt();
//x[1] = string.substring(5, 6).toInt();
//  for(int i =0;i<5;i++){
//    x[i] = atoi(xy[3*i]);
//    
//  }

if(a==0){
for(int i=0 ;i<int(lengtha/3);i++){
  Serial.println(xa[i]);
  }
  a += 1;
}
*/
/*
    for(i = 0; i < 3; i++){     // 총 4글자 반복

if(
      
       for (row = 0; row < 8; row++) {    // row 출력
         for (col=0; col < 8; col++){     // col 출력
            if (patterns[i][7 - col][7 - row] == 1)      
// 위의 배열에서 1일때 해당되는 위치 불빛 켜주기
              lc.setLed(i, col, row, true); 
            else                           // 위 배열에서 0일때 해당되는 위치 불빛 꺼주기
              lc.setLed(i, col, row, false); 
         }
      }
      delay(500);     // 딜레이 500ms
    }
    clean();          // led 전체 꺼주기
    delay(500);       // 딜레기 500ms    */
//sCommand.substring(2, 5).toCharArray(cTempData, 4);
//  for(int i =0;i<5;i++){
//    sCommand.substring(3*i+2, 3*i+3).toCharArray(cTempData, 4);
//    }
//sCommand.substring(0, 3).toCharArray(cTempData, 4);


//int nR = atoi(cTempData);
//Serial.println(nR);
//    for (int i=0;i<5;i++){
//      x[i] = string.charAt[] -'0';
//      }
//if(textnum == 'a'){
//  }
  //b 일때
  //c 일때  
//    Serial.println(string.charAt(0));
//  long value1 = Serial.parseInt();
//  long value2 = Serial.parseInt();
//  long value3 = Serial.parseInt();
//    clean();
//    Serial.println(value1);
//    Serial.println(value2);
//    Serial.println(value3);
//    col
  
}



//}
    string="";  //string 변수값 초기화
             
  }
